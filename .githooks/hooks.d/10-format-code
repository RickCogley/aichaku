#!/bin/sh
# Code formatting hook - formats source code files
# Uses appropriate formatter based on project type

. .githooks/lib/common.sh

echo "    ðŸŽ¨ Formatting code..."
files_changed=false

# Format with Deno (includes TypeScript, JavaScript, Markdown, JSON)
if command -v deno >/dev/null 2>&1; then
    log_info "Formatting with deno fmt..."
    # Use deno fmt without --ext to respect deno.json configuration
    if deno fmt; then
        # Check if any supported files were modified (deno handles exclusions)
        if files_modified '*.ts *.js *.tsx *.jsx *.md *.json *.jsonc'; then
            files_changed=true
            log_success "Files formatted with Deno"
        else
            log_info "Files already formatted"
        fi
    else
        log_error "deno fmt failed"
        exit 1
    fi
elif [ -f "package.json" ] && command -v prettier >/dev/null 2>&1; then
    # Fallback: Node.js project without Deno - use prettier
    log_info "Formatting with prettier..."
    if prettier --write '**/*.{js,ts,tsx,jsx,md}' --print-width=120 --prose-wrap=preserve; then
        if files_modified '*.js *.ts *.tsx *.jsx *.md'; then
            files_changed=true
            log_success "Files formatted with Prettier"
        fi
    fi
else
    log_warn "Neither deno nor prettier found - install deno for best experience"
fi

# Format other languages based on project type
case "$(detect_project_type)" in
    "rust")
        if command -v cargo >/dev/null 2>&1; then
            log_info "Formatting Rust..."
            cargo fmt
            if files_modified '*.rs'; then
                files_changed=true
                log_success "Rust formatted"
            fi
        fi
        ;;
    "python")
        if command -v black >/dev/null 2>&1; then
            log_info "Formatting Python..."
            black .
            if files_modified '*.py'; then
                files_changed=true
                log_success "Python formatted"
            fi
        fi
        ;;
    "go")
        if command -v go >/dev/null 2>&1; then
            log_info "Formatting Go..."
            go fmt ./...
            if files_modified '*.go'; then
                files_changed=true
                log_success "Go formatted"
            fi
        fi
        ;;
esac

# Stage any changes
if [ "$files_changed" = true ]; then
    stage_changes
fi

exit 0
