# Aichaku Core Behavioral Directives
# These mandatory rules govern how Claude Code behaves with Aichaku-configured projects

name: "Aichaku Behavioral Directives"
version: "2.0.0"
description: "Mandatory behavioral rules for Claude Code when working with Aichaku projects"

rules:
  # MOST IMPORTANT: Always understand context first
  context_awareness:
    name: "Context-First Development"
    priority: "HIGHEST"
    mandatory: true
    description: "Always read and understand all available context before any action"
    implementation:
      - "Read the main CLAUDE.md immediately to understand project configuration"
      - "Use Glob tool with pattern '**/CLAUDE.md' to find all context files"
      - "Read subfolder CLAUDE.md files before working in those areas"
      - "Prioritize local context over general patterns"
    why: "Context determines everything - the app type, selected methodologies, standards, and project-specific patterns"

  # Work within user's explicit selections
  respect_user_selection:
    name: "Respect User Selections"
    priority: "CRITICAL"
    description: "Users have explicitly chosen their methodologies, standards, and principles"
    implementation:
      - "Check 'application' section first - understand what kind of app this is"
      - "Check 'methodologies' section - work within the selected approach"
      - "Check 'standards' section - follow the selected guidelines"
      - "Check 'principles' section - respect the chosen philosophies"
      - "NEVER suggest alternatives or try to detect different approaches"
    triggers:
      - "When user mentions methodology concepts, respond within their selection"
      - "Reference the methodology's specific triggers and templates"
      - "Guide using the patterns they've chosen, not what you think is best"

  # Simple, clear project creation workflow
  project_creation:
    name: "Project Creation Workflow"
    description: "Simple two-step process: Discuss then Create"
    workflow:
      discuss:
        when: "User mentions project ideas or methodology concepts"
        do:
          - "Acknowledge their selected methodology: 'ðŸª´ Aichaku: I see you're working with [methodology]'"
          - "Ask clarifying questions to understand their goal"
          - "Help refine ideas using their methodology's principles"
        dont:
          - "Create any files or folders"
          - "Ask 'Would you like me to create...?'"
          - "Suggest different methodologies"

      create:
        when: "User explicitly says: 'create project', 'let's start', 'set it up'"
        do:
          - "State what you're doing: 'ðŸª´ Aichaku: Creating project: [descriptive-name]'"
          - "Create in: docs/projects/active/YYYY-MM-DD-{descriptive-name}/"
          - "Create STATUS.md first, then methodology-specific documents"
          - "Use the templates from their selected methodology"
        dont:
          - "Ask for confirmation after they've signaled readiness"
          - "Create files in the root directory"
          - "Deviate from the selected methodology's structure"

  # Automatic behaviors that should just happen
  automation:
    name: "Automatic Behaviors"
    description: "Things that happen without asking"
    behaviors:
      error_recovery:
        when: "File created in wrong location"
        do: "Move it immediately to docs/projects/active/*/ and update STATUS.md"

      git_operations:
        when: "Work confirmed complete"
        do: |
          git add docs/projects/active/[current-project]/
          git commit -m '[type]: [description]

          - [what was done]
          - [key changes]'

      progress_tracking:
        when: "Working on any task"
        do: "Update STATUS.md with progress automatically"

summary:
  core_principle: |
    1. READ context first (CLAUDE.md files)
    2. RESPECT user selections (methodologies, standards, principles)
    3. DISCUSS ideas within their chosen framework
    4. CREATE immediately when asked (no confirmation needed)
    5. AUTOMATE the boring stuff (file moves, git, progress)

  remember: "Users chose their approach. Your job is to excel within their choices, not second-guess them."
